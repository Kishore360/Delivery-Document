select fi.incident_key ,di.caused_by_change_flag, dio.organization_name ,
dvm.dimension_wh_code ,
case when dvm.dimension_wh_code = 'RESOLVED' or dvm.dimension_wh_code ='CLOSED' then COALESCE(fi.open_to_resolve_duration,0) else 0 end /86400 as MTTR
from  appsqa_mdwdb.f_incident fi 
join appsqa_mdwdb.d_internal_contact dc
on  fi.opened_by_key = dc.row_key
join appsqa_mdwdb.d_incident di
on  fi.incident_key = di.row_key
join appsqa_mdwdb.d_calendar_date dcd
on  fi.opened_on_key = dcd.row_key
 join appsqa_mdwdb.d_internal_organization dio 
on fi.opened_by_department_key = dio.row_key
--join appsqa_mdwdb.d_calendar_date dcd
--on  fi.opened_on_key = dcd.row_key
join  appsqa_mdwdb.d_lov  dv 
on fi.state_src_key  = dv.row_key
join  appsqa_mdwdb.d_lov_map dvm
on dvm.dimension_code  = dv.dimension_code
and dvm.dimension_class=dv.dimension_class
join appsqa_mdwdb.d_domain dom
on dom.row_key = fi.domain_key
where dcd.lagging_count_of_month between 0 and 11 
order by di.caused_by_change_flag,dio.organization_name asc;

select di.caused_by_change_flag, dio.organization_name ,
 round(cast(sum (case when dvm.dimension_wh_code = 'RESOLVED' or dvm.dimension_wh_code ='CLOSED' then COALESCE(open_to_resolve_duration,0) else 0 end /86400) as numeric )/
 cast(count(case when dvm.dimension_wh_code = 'RESOLVED' or dvm.dimension_wh_code ='CLOSED' then 1 end) as numeric) ,2) as MTTR,
sum(CASE WHEN dvm.dimension_wh_code = 'CLOSED' and di.met_sla_flag = 'Y' THEN 1 ELSE NULL end) as met_sla_incidents,
sum(case when dvm.dimension_wh_code = 'CLOSED' then 1 else NULL end) as Closed_Incidents,
concat(round(cast(sum(CASE WHEN dvm.dimension_wh_code = 'CLOSED' and di.met_sla_flag = 'Y' THEN 1 ELSE NULL end)as numeric)/
cast(sum(case when dvm.dimension_wh_code = 'CLOSED' then 1 else NULL end)as numeric) *100 :: integer),'%') as percentage_met_sla ,
sum((fi.open_to_close_duration / 3600)) as Incident_opened_to_close,
sum(case when di.over_due_flag ='Y' then 1 else 0 end )overdue_incidents,
sum(CASE WHEN di.reopened_flag ='Y' and di.met_sla_flag = 'Y' THEN 1 ELSE 0 end) as Reopened_incidents_met_all_sla,
concat(round(cast(sum(case when di.over_due_flag ='Y' then 1 else 0 end )as numeric)/
cast(count(fi.row_key)as numeric)*100 ::integer),'%') as overdue_incidents_percent,
sum(case when di.multiple_assignment_flag = 'Y'and di.met_sla_flag = 'Y' then 1 else 0 end )as Multiple_assignement_incidents_met_all_sla,
sum(case when di.multiple_assignment_flag = 'Y'then 1 else 0 end )as Multiple_assignment_incident,
sum(case when di.multiple_assignment_flag = 'Y'and di.met_sla_flag = 'N' then 1 else 0 end )as Multiple_assignment_incidents_missed_any_sla
from  appsqa_mdwdb.f_incident fi 
join appsqa_mdwdb.d_internal_contact dc
on  fi.opened_by_key = dc.row_key
join appsqa_mdwdb.d_incident di
on  fi.incident_key = di.row_key
join appsqa_mdwdb.d_calendar_date dcd
on  fi.opened_on_key = dcd.row_key
 join appsqa_mdwdb.d_internal_organization dio 
on fi.opened_by_department_key = dio.row_key
--join appsqa_mdwdb.d_calendar_date dcd
--on  fi.opened_on_key = dcd.row_key
join  appsqa_mdwdb.d_lov  dv 
on fi.state_src_key  = dv.row_key
join  appsqa_mdwdb.d_lov_map dvm
on dvm.dimension_code  = dv.dimension_code
and dvm.dimension_class=dv.dimension_class
join appsqa_mdwdb.d_domain dom
on dom.row_key = fi.domain_key
where dcd.lagging_count_of_month between 0 and 11 
group by di.caused_by_change_flag,dio.organization_name
order by di.caused_by_change_flag,dio.organization_name asc;